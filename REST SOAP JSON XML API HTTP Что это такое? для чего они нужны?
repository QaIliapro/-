REST – архитектурный стиль реализации клиент-серверных приложений на основе протокола HTTP
SOAP – протокол обмена сообщениями в формате XML
REST может использовать любой тип данных: JSON, XML, HTML, текст, а SOAP только XML
JSON – формат данных типа ключ-значение: 
{
   “name”: “Анастасия”, 
   “age”: 26
}
XML – расширяемый язык разметки. Информация передаётся в тегах: 
<person>
   <name>Анастасия</name>
   <age>26<age/>
</person>
API (АПИ) – набор инструментов, благодаря которому одно приложение может взаимодействовать с другим
HTTP (Протокол Передачи Гипертекста) — язык общения между клиентом и сервером
Клиент-серверное взаимодействие
 
Клиент шлёт запрос серверу, сервер его обрабатывает, выполняет операции с базой данных, формирует ответ и отправляет его клиенту. Обмен сообщениями осуществляется на основе протокола HTTP
Основные методы HTTP:
GET - для получения информации от сервера
POST - для отправки данных на сервер
PUT - для обновления существующей информации на сервере или создания новой, если её нет
DELETE - для удаления информации на сервере
Отличия метода GET от POST
Данные методом GET передаются в URL-адресе, а данные методом POST передаются в теле запроса
Отличия метода POST от PUT
Метод POST всегда создаёт новую запись в Базу Данных, метод PUT проверяет если ли данные в Базе Данных, если есть, то он их обновляет, а если их нет, то создаёт новые
Отправка данных
Методом GET передаются в URL-адресе, а именно в строке запроса. Строка запроса начинается со знака ? после которого перечисляются ключи и значения, разделённые знаком амперсанда (&). (Например, в запросе google.com/search?q=погода. Строка запроса это ?q=погода)
Методами POST, PUT, DELETE данные, как правило, передаются в теле запроса в формате JSON.
Можно ли методом Post отправить данные в URL, а методом GET в теле запроса
Методами POST, PUT, DELETE можно отправить данные в URL-адресе (в строке запроса), но они для того и нужны, чтобы передавать данные в теле запроса, т.е. скрывая от посторонних глаз. В тоже время методом GET нельзя отправить данные в теле запроса, так как сервер его просто не обработает
Можно ли методом Post запросить данные, а методом GET создать
Никто не запрещает нам так делать, но с точки зрения стандарта это нецелесообразное использование методов или использования методов не по назначению.
Статус коды:
1ХХ – Информационные
2ХХ – Успешные
3ХХ – Перенаправления
4ХХ – Ошибки клиента
5ХХ – Ошибки сервера
Как проводили тестирование API / Как проводили тестирование интеграций?
Тестирование API осуществляется при помощи Postman.
Для того чтобы отправить запрос в Postman нужно взять из документации (например, в Confluence), разработанной программистом URL-адрес, выбрать метод и вставить данные, которые мы отправляем на сервер и нажать на кнопку отправить запрос. Полученный ответ мы сверяем с документацией: смотрим на статус код и структуру ответа. Если необходимо полученные данные можем сверить с тем, что хранится в базе данных.
Я тестировал API(интеграцию) только с нашим сервером, со сторонними ресурсами взаимодействие я не проверял. Ни с какими шинами интеграций и тому подобное дел не имел.



